메인화면, 세션처리, 로그아웃 페이지

AJAX를 써보자.

세션의 내용 :
세션이 필요한 페이지에서, 세션의 주소와 web3.eth.accounts[0]이 같은지 확인.
다르다면 서명 요구 후 세션에 주소 등록


구현 리스트 :
미결 거래(, 총 거래, 총 개)


레이아웃 스케치 :
메뉴바 (세션에 관련) (내 정보 조회, (세션에 주소가 있다면 : 내 개 목록 조회, 내 거래 내역 조회, 인증 해제))

컨텍스트 메뉴 (위치에 관현, 데스크탑 UI에서는 왼쪽, 오른쪽 등에 표현) (검색창, 검색 메뉴, 개 등록, 거래 등록)

메인 페이지 (거래 게시글, 개 정보, 거래 목록, 필터링된 개 목록 등.)

메인화면에서 제공할 것 :
    세션 필요 :
    - 내 정보 조회

    세션이 있다면 :
    - 로그아웃
    - 내 개 목록 조회
    - 내 거래 내역 조회
    (따로 구현하지 않고 web3.eth.accounts[0]을 넣어보자. => 위에 있는 위젯만 바꿀 수 있다면, 내 개 목록 조회에는 개 등록, 내 거래 내역 조회에는 거래 등록을 넣어보자. (대신 빠지는 것은 검색창) 받은 지갑주소에서 검사하면 될듯.)

    세션 불필요 :
    - 최근 등록된 미결 거래들 (일단은 AJAX)
    - 거래번호로 거래 조회
    - 개 목록 조회

    - 나이 구간으로 미결 거래 필터링
    - 성별로 미결 거래 필터링
    - 품종으로 미결 거래 필터링
    - 크기로 미결 거래 필터링
    - 털길이로 미결 거래 필터링

    - 개 이름으로 거래 필터링
    - 개 id로 거래 필터링
    - 동물등록번호로 거래 필터링
    - 지갑 주소로 거래 필터링 (판매자, 구매자, 전부)


내 정보 조회에서 제공할 것 :
    - 이름, 핸드폰 번호 (없으면 정보가 없습니다 에러 메시지와 함께 등록 페이지로 연결)
    - 정보 재등록 

내 정보 등록에서 제공할 것 :
    - 이름 폼, 핸드폰 폼
    (본인인증이 있다 치고, 했다 친다.)

개 목록 화면에서 제공할 것 :
    - 동물등록번호로 개 조회
    - id로 개 조소
    - 소유자 이름으로 개 필터링
    - 소유자 지갑 주소로 개 필터링
    - 이름으로 개 필터링
    - 품종으로 개 필터링
    - 크기로 개 필터링
    - 색깔로 개 필터링
    - 털길이로 개 필터링

영우에게 말할 것 : 로딩 화면
민규에게 말할 것 : 미결 거래 리스트를 컨트랙트에서 관리할지 서버에서 관리할지

진행 : web3.py 컨트랙트 조회, 지갑 인증 성공
브라우저에서 컨트랙트 조회, 브라우저에서 컨트랙트 보내기, 브라우저에서 이벤트 받기 성공.
웹소켓 적용 실패